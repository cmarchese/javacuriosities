<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xsi:schemaLocation="
        http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd">

    <bean id="business" class="ar.com.javacuriosities.spring.services.Business" />

    <bean id="afterReturnInterceptor" class="ar.com.javacuriosities.spring.interceptors.AfterReturnInterceptor" />
    <bean id="aroundInterceptor" class="ar.com.javacuriosities.spring.interceptors.AroundInterceptor" />
    <bean id="beforeInterceptor" class="ar.com.javacuriosities.spring.interceptors.BeforeInterceptor" />
    <bean id="throwsInterceptor" class="ar.com.javacuriosities.spring.interceptors.ThrowsInterceptor" />

    <bean id="businessWithAfterReturnInterceptor" class="org.springframework.aop.framework.ProxyFactoryBean">
        <property name="target" ref="business" />
        <property name="interceptorNames">
            <list>
                <value>afterReturnInterceptor</value>
            </list>
        </property>
    </bean>

    <bean id="businessWithAroundInterceptor" class="org.springframework.aop.framework.ProxyFactoryBean">
        <property name="target" ref="business" />
        <property name="interceptorNames">
            <list>
                <value>aroundInterceptor</value>
            </list>
        </property>
    </bean>

    <bean id="businessWithBeforeInterceptor" class="org.springframework.aop.framework.ProxyFactoryBean">
        <property name="target" ref="business" />
        <property name="interceptorNames">
            <list>
                <value>beforeInterceptor</value>
            </list>
        </property>
    </bean>

    <bean id="businessWithThrowsInterceptor" class="org.springframework.aop.framework.ProxyFactoryBean">
        <property name="target" ref="business" />
        <property name="interceptorNames">
            <list>
                <value>throwsInterceptor</value>
            </list>
        </property>
    </bean>

    <bean id="installation" class="ar.com.javacuriosities.spring.services.Installation" />
    <bean id="installationAspect" class="ar.com.javacuriosities.spring.aspect.xml.InstallationAspect" />

    <aop:config>
        <aop:aspect id="installationWithXMLAspect" ref="installationAspect" >
            <aop:pointcut expression="execution(* ar.com.javacuriosities.spring.services.Installation.*())" id="installationPointcut"/>
            <aop:pointcut expression="execution(* ar.com.javacuriosities.spring.services.Installation.*(..))" id="installationPointcutMultiplesParameters"/>

            <!-- A before advice definition -->
            <aop:before pointcut-ref = "installationPointcut" method = "beforeAdvice"/>

            <!-- An after advice definition -->
            <aop:after pointcut-ref = "installationPointcut" method = "afterAdvice"/>

            <!-- An after-returning advice definition -->
            <!-- The afterReturningAdvice method must have parameter named retVal -->
            <aop:after-returning pointcut-ref = "installationPointcut" method = "afterReturningAdvice" returning = "retVal"/>

            <!-- An after-throwing advice definition -->
            <!-- The afterThrowingAdvice method must have parameter named ex -->
            <aop:after-throwing pointcut-ref = "installationPointcut" method = "afterThrowingAdvice" throwing = "ex"/>

            <!-- An around advice definition -->
            <aop:around pointcut-ref = "installationPointcut" method = "aroundAdvice"/>

            <aop:around pointcut-ref = "installationPointcutMultiplesParameters" method = "aroundAdvice"/>
        </aop:aspect>
    </aop:config>

    <aop:aspectj-autoproxy />

    <bean id="configuration" class="ar.com.javacuriosities.spring.services.Configuration" />
    <bean id="configurationAspect" class="ar.com.javacuriosities.spring.aspect.annotations.ConfigurationAspect" />
</beans>